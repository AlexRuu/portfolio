generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Images {
  id        String   @id @default(uuid())
  url       String
  height    Int
  width     Int
  createdAt DateTime @default(now())
}

model Recipe {
  id               String            @id @default(uuid())
  title            String
  description      String
  shortDescription String            @default("")
  RecipeImage      RecipeImage[]
  RecipeComponent  RecipeComponent[]
  prepTime         String
  cookTime         String
  totalTime        String
  servingSize      String
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
}

model RecipeComponent {
  id          String       @id @default(uuid())
  title       String
  recipeId    String
  recipe      Recipe       @relation(fields: [recipeId], references: [id])
  description String       @default("")
  ingredients Ingredient[]
  directions  Direction[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Ingredient {
  id                String          @id @default(uuid())
  title             String
  measurementId     String?
  measurement       Measurement?    @relation(fields: [measurementId], references: [id])
  recipeComponentId String
  recipeComponent   RecipeComponent @relation(fields: [recipeComponentId], references: [id])
}

model Measurement {
  id         String       @id @default(uuid())
  amount     String
  unitId     String?
  unit       Unit? @relation(fields: [unitId], references: [id])
  Ingredient Ingredient[]
}

model Unit {
  id String @id @default(uuid())
  title String
  measurement Measurement[]
}

model Direction {
  id                String          @id @default(uuid())
  step              Int
  direction         String
  recipeComponentId String
  RecipeComponent   RecipeComponent @relation(fields: [recipeComponentId], references: [id])
  createdAt         DateTime        @default(now())
  updatedAt         DateTime        @updatedAt
}

model RecipeImage {
  id        String   @id @default(uuid())
  url       String
  recipeId  String
  recipe    Recipe   @relation(fields: [recipeId], references: [id])
  createdAt DateTime @default(now())
}

model Project {
  id          String   @id @default(uuid())
  title       String
  description String
  url         String
  projectImage ProjectImage[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model ProjectImage {
  id String @id @default(uuid())
  url String 
  projectId String
  project Project @relation(fields: [projectId], references: [id])
}